* vim 列操作
  - ctrl-v :: 进入纵向编辑模式
  
** 示例 1：纵向编辑在批量修改代码的应用演示
     将数列：
      10.1.5.214 
      10.1.5.212 
      10.1.5.210
     编辑成序列：
      ping -c 4 10.5.5.214 >> result0 
      ping -c 4 10.5.5.212 >> result0 
      ping -c 4 10.5.5.210 >> result0
     这是一个将 IP 数列修改成可执行的 ping 命令序列的过程。
** 第一步：修改
     将 IP 数列中第二段所有数字“1” 修改为“5”：
     将游标定位第一个行 IP 地址第二段的“1”
     ctrl-v 进入纵向编辑模式
     G 移动游标到最后一行，可视块覆盖所要修改的列
     r 进入修改模式
     5 输入数字“5”
     ESC 退出纵向编辑模式，同时所有被选中的数字都被改成了“5”，并回到命令模式
     结果如下：
      10.5.5.214 
      10.5.5.212 
      10.5.5.210
** 第二步：前添加
     在所有行之前添加“ping – c 4 ”：
     将游标定位到第一行第一列
     ctrl-v 进入纵向编辑模式
     G 移动游标到最后一行第一列，可视块覆盖了第一列
     I 进入行首插入模式
     ping -c 4 输入所要求字符“ping – c 4 ”
     ESC 退出纵向编辑模式的同时所有选中的字符前都添加了“ping – c 4 ”，回到命令模式
     结果如下：
      ping -c 4 10.5.5.214 
      ping -c 4 10.5.5.212 
      ping -c 4 10.5.5.210
** 第三步：后添加
     在所有行之后添加“>> result0”：
     将游标定位到第一行最后一列
     ctrl-v 进入纵向编辑模式
     G 移动游标到最后一行最后一列，VISUAL 　 BLOCK 　覆盖了最后一列
     A 进入行尾插入模式
     >> result	输入所要求字符“>> result0”
     ESC 退出纵向编辑模式的同时所有选中的字符后都添加了“ >> result0”，回到命令模式
     结果如下：
      ping -c 4 10.5.5.214 >> result0 
      ping -c 4 10.5.5.212 >> result0 
      ping -c 4 10.5.5.210 >> result0
* vim highlight html
1. set in .vimrc
    You can also put this into your .vimrc :
    au BufReadPost *.html set syntax=html
2. set in buffer
   :set syntax=html
* vim replace
  语法为 :[addr]s/源字符串/目的字符串/[option]

  *[addr] 表示检索范围，省略时表示当前行。* \\
     全局替换命令为：:%s/源字符串/目的字符串/g  \\
      “%” ：表示整个文件，同“1,$”；  \\
      “. ,$” ：从当前行到文件尾；  

  *[option] : 表示操作类型*  \\
        如：g 表示全局替换;  \\
        c 表示进行确认  \\
        p 表示替代结果逐行显示（Ctrl + L 恢复屏幕）；  \\
        省略 option 时仅对每行第一个匹配串进行替换；                 \\
        如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义
* vim 快捷键
vim 快捷键选中一个单词： 按 *
* windows 文件传到 linux 需要的处理
1. 用 vim 打开， 然后 set fileformat=unix

下边的不必须 set fileecoding=utf-8
* vim tab to space
:set expandtab

:retab
* vim 格式化代码
  1. 选中代码
  2. 用=来格式化代码
* vim 修改语法高亮 :set syntax=sql
* 删除标记内部的文字
  当我开始使用 Vim 时，一件我总是想很方便做的事情是如何轻松的删除方括号或圆括号里的内容。转到开始的标记，然后使用下面的语法：
  di[标记]

  比如，把光标放在开始的圆括号上，使用下面的命令来删除圆括号内的文字：
  di(

  如果是方括号或者是引号，则使用：
  di{

  和：
  di&quot;
* 把光标下的文字置于屏幕中央
  我们所要做的事情如标题所示。如果你想强制滚动屏幕来把光标下的文字置于屏幕的中央，在可视模式中使用命令（译者注：在普通模式中也可以）：
  zz
* 跳到上一个／下一个位置
  当你编辑一个很大的文件时，经常要做的事是在某处进行修改，然后跳到另外一处。如果你想跳回之前修改的地方，使用命令：
  Ctrl+o
  来回到之前修改的地方
  类似的：
  Ctrl+i
* vim set
1. :set ignorecase
