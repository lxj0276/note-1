#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>

* spark 安装及测试(两周)
** 集群安装
  1. 确定集群是集成在 cloudera, 还是重新搭建一个?
    直接在 cloudera 中, 用 cloudera 管理 Hadoop 及 spark, 统一性强, 可以用界面维护, 运维应该要简单一些.
  2. 确定 spark 安装的节点
  3. 安装 spark
** 修改部分配置(做一些优化, 比如适应 hive on spark 等)
** 集群测试
  1. 在 spark 安装完时测试集群
  2. 边修改部分配置, 边测试集群

* 集群安全及测试(待验证)(一个月)
** 不让没有权限的访问 spark-submit 命令
   调用命令权限没有控制, 用户都可以调用 spark-submit, spark-shell, hadoop 等命令
** spark 访问 hive 表的权限
   
** hdfs 文件权限的管理(修改 hdfs 文件权限会不会对当前的 MR 有影响)
   可以通过设置 hdfs 中文件的权限来控制用户对文件的读写.

   目前 hive 仓库下 hdfs 上的文件基本上所有的表对所有用户都有读写权限
** 集群资源的可分配性(待查询可否控制)

* hive on spark(一个月)
  1. 调度系统上线后, 查看计算脚本的运行时长
  2. 根据运行时长及重要程序排序, 排除优先级
  3. 先拿出几个脚本测试
     1). 直接在 spark 上跑, 测试效果
     2). 设置运行前参数, 调优, 测试效果  
  4. 根据优先级逐步上线脚本在 spark 上跑

* streaming(2.5 个月)
** 基于 avs 日志做用户分析(app)
  1. 跟数据提供方对接, 确定日志所在服务器, 位置, 日志格式等
  2. 确定技术方案(flume + kafka + streaming => (hive/hbase/hdfs ?)
  3. 实施实时流各组件的对接
  4. 开发程序解析, 分析日志信息
  5. 根据日志包含的数据分析可能的需求
  6. 根据分析得到的需求, 开发并测试程序
  
* graghX(2.5 个月)
** 通讯录(讨论一个项目)
  1. 跟数据提供方对接, 确定在 oracle/mongodb/file(文件)中, 或者在其他的地方, 确定数据格式
  2. 根据第一条, 确定技术方案
  3. 实施技术方案
  4. 根据数据分析可能的需求
  5. 根据需求, 开发并测试程序
