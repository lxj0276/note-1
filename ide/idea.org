* idea key generate
  [[https://www.iteblog.com/idea/][在线免费生成 IntelliJ IDEA 15.0(16.+)注册码]]
* shortkeys
  [[https://www.jetbrains.com/help/clion/2016.3/navigation-in-source-code.html][Navigation In Source Code]]
* 快捷键 for mac
键盘符号和修饰键说明
⌘ Command
⇧ Shift
⌥ Option
⌃ Control
↩︎ Return/Enter
⌫ Delete
⌦ 向前删除键（Fn+Delete）
↑ 上箭头
↓ 下箭头
← 左箭头
→ 右箭头
⇞ Page Up（Fn+↑）
⇟ Page Down（Fn+↓）
Home Fn + ←
End Fn + →
⇥ 右制表符（Tab 键）
⇤ 左制表符（Shift+Tab）
⎋ Escape (Esc)
** Editing（编辑）

Control + Space 基本的代码补全（补全任何类、方法、变量）
Control + Shift + Space 智能代码补全（过滤器方法列表和变量的预期类型）
Command + Shift + Enter 自动结束代码，行末自动添加分号
Command + P 显示方法的参数信息
Control + J 快速查看文档
Shift + F1 查看外部文档（在某些代码上会触发打开浏览器显示相关文档）
Command + 鼠标放在代码上 显示代码简要信息
Command + F1 在错误或警告处显示具体描述信息
Command + N, Control + Enter, Control + N 生成代码（getter、setter、构造函数、hashCode/equals,toString）
Control + O 覆盖方法（重写父类方法）
Control + I 实现方法（实现接口中的方法）
Command + Option + T 包围代码（使用 if..else, try..catch, for, synchronized 等包围选中的代码）
Command + / 注释/取消注释与行注释
Command + Option + / 注释/取消注释与块注释
Option + 方向键上 连续选中代码块
Option + 方向键下 减少当前选中的代码块
Control + Shift + Q 显示上下文信息
Option + Enter 显示意向动作和快速修复代码
Command + Option + L 格式化代码
Control + Option + O 优化 import
Control + Option + I 自动缩进线
Tab / Shift + Tab 缩进代码 / 反缩进代码
Command + X 剪切当前行或选定的块到剪贴板
Command + C 复制当前行或选定的块到剪贴板
Command + V 从剪贴板粘贴
Command + Shift + V 从最近的缓冲区粘贴
Command + D 复制当前行或选定的块
Command + Delete 删除当前行或选定的块的行
Control + Shift + J 智能的将代码拼接成一行
Command + Enter 智能的拆分拼接的行
Shift + Enter 开始新的一行
Command + Shift + U 大小写切换
Command + Shift + ] / Command + Shift + [ 选择直到代码块结束/开始
Option + Fn + Delete 删除到单词的末尾
Option + Delete 删除到单词的开头
Command + 加号 / Command + 减号 展开 / 折叠代码块
Command + Shift + 加号 展开所以代码块
Command + Shift + 减号 折叠所有代码块
Command + W 关闭活动的编辑器选项卡
** Search/Replace（查询/替换）

Double Shift 查询任何东西
Command + F 文件内查找
Command + G 查找模式下，向下查找
Command + Shift + G 查找模式下，向上查找
Command + R 文件内替换
Command + Shift + F 全局查找（根据路径）
Command + Shift + R 全局替换（根据路径）
Command + Shift + S 查询结构（Ultimate Edition 版专用，需要在 Keymap 中设置）
Command + Shift + M 替换结构（Ultimate Edition 版专用，需要在 Keymap 中设置）
** Usage Search（使用查询）

Option + F7 / Command + F7 在文件中查找用法 / 在类中查找用法
Command + Shift + F7 在文件中突出显示的用法
Command + Option + F7 显示用法
** Compile and Run（编译和运行）

Command + F9 编译 Project
Command + Shift + F9 编译选择的文件、包或模块
Control + Option + R 弹出 Run 的可选择菜单
Control + Option + D 弹出 Debug 的可选择菜单
Control + R 运行
Control + D 调试
Control + Shift + R, Control + Shift + D 从编辑器运行上下文环境配置
** Debugging（调试）

F8 进入下一步，如果当前行断点是一个方法，则不进入当前方法体内
F7 进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中
Shift + F7 智能步入，断点所在行上有多个方法调用，会弹出进入哪个方法
Shift + F8 跳出
Option + F9 运行到光标处，如果光标前有其他断点会进入到该断点
Option + F8 计算表达式（可以更改变量值使其生效）
Command + Option + R 恢复程序运行，如果该断点下面代码还有断点则停在下一个断点上
Command + F8 切换断点（若光标当前行有断点则取消断点，没有则加上断点）
Command + Shift + F8 查看断点信息
** Navigation（导航）

Command + O 查找类文件
Command + Shift + O 查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠/
Command + Option + O 前往指定的变量 / 方法
Control + 方向键左 / Control + 方向键右 左右切换打开的编辑 tab 页
F12 返回到前一个工具窗口
Esc 从工具窗口进入代码文件窗口
Shift + Esc 隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口
Command + Shift + F4 关闭活动 run/messages/find/... tab
Command + L 在当前文件跳转到某一行的指定处
Command + E 显示最近打开的文件记录列表
Option + 方向键左 / Option + 方向键右 光标跳转到当前单词 / 中文句的左 / 右侧开头位置
Command + Option + 方向键左 / Command + Option + 方向键右 退回 / 前进到上一个操作的地方
Command + Shift + Delete 跳转到最后一个编辑的地方
Option + F1 显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在代码编辑窗口可以选择显示该文件的 Finder)
Command + B / Command + 鼠标点击 进入光标所在的方法/变量的接口或是定义处
Command + Option + B 跳转到实现处，在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口
Option + Space, Command + Y 快速打开光标所在方法、类的定义
Control + Shift + B 跳转到类型声明处
Command + U 前往当前光标所在方法的父类的方法 / 接口定义
Control + 方向键下 / Control + 方向键上 当前光标跳转到当前文件的前一个/后一个方法名位置
Command + ] / Command + [ 移动光标到当前所在代码的花括号开始/结束位置
Command + F12 弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）
Control + H 显示当前类的层次结构
Command + Shift + H 显示方法层次结构
Control + Option + H 显示调用层次结构
F2 / Shift + F2 跳转到下一个/上一个突出错误或警告的位置
F4 / Command + 方向键下 编辑/查看代码源
Option + Home 显示到当前文件的导航条
F3 选中文件/文件夹/代码行，添加/取消书签
Option + F3 选中文件/文件夹/代码行，使用助记符添加/取消书签
Control + 0...Control + 9 定位到对应数值的书签位置
Command + F3 显示所有书签
** Refactoring（重构）

F5 复制文件到指定目录
F6 移动文件到指定目录
Command + Delete 在文件上为安全删除文件，弹出确认框
Shift + F6 重命名文件
Command + F6 更改签名
Command + Option + N 一致性
Command + Option + M 将选中的代码提取为方法
Command + Option + V 提取变量
Command + Option + F 提取字段
Command + Option + C 提取常量
Command + Option + P 提取参数
** VCS/Local History（版本控制/本地历史记录）

Command + K 提交代码到版本控制器
Command + T 从版本控制器更新代码
Option + Shift + C 查看最近的变更记录
Control + C 快速弹出版本控制器操作面板
** Live Templates（动态代码模板）

Command + Option + J 弹出模板选择窗口，将选定的代码使用动态模板包住
Command + J 插入自定义动态代码模板
** General（通用）

Command + 1...Command + 9 打开相应编号的工具窗口
Command + S 保存所有
Command + Option + Y 同步、刷新
Control + Command + F 切换全屏模式
Command + Shift + F12 切换最大化编辑器
Option + Shift + F 添加到收藏夹
Option + Shift + I 检查当前文件与当前的配置文件
Control + ` 快速切换当前的 scheme（切换主题、代码样式等）
Command + , 打开 IDEA 系统设置
Command + ; 打开项目结构对话框
Shift + Command + A 查找动作（可设置相关选项）
Control + Shift + Tab 编辑窗口标签和工具窗口之间切换（如果在切换的过程加按上 delete，则是关闭对应选中的窗口）
** Other（一些官方文档上没有体现的快捷键）

Command + Shift +8 竖编辑模式

* 快捷键
[[https://my.oschina.net/dyyweb/blog/494504][IntelliJ Idea 常用快捷键 列表(实战终极总结！！！！)]]
IntelliJ Idea 常用快捷键 列表(实战终极总结！！！！) 
** -----------自动代码-------- 

常用的有 fori/sout/psvm+Tab 即可生成循环、System.out、main 方法等 boilerplate 样板代码 
例如要输入 for(User user : users)只需输入 user.for+Tab 
再比如，要输入 Date birthday = user.getBirthday();只需输入 user.getBirthday().var+Tab 即可。代码标签输入完成后，按 Tab，生成代码。

Ctrl+Alt+O 优化导入的类和包 
Alt+Insert 生成代码(如 get,set 方法,构造函数等)   或者右键（Generate） 
fori/sout/psvm + Tab  
Ctrl+Alt+T  生成 try catch  或者 Alt+enter 
CTRL+ALT+T  把选中的代码放在 TRY{} IF{} ELSE{} 里 
Ctrl + O 重写方法  
Ctrl + I 实现方法 
Ctr+shift+U 大小写转化  
ALT+回车    导入包,自动修正  
ALT+/       代码提示 
CTRL+J      自动代码  
Ctrl+Shift+J，整合两行为一行 
CTRL+空格   代码提示  
CTRL+SHIFT+SPACE 自动补全代码  
CTRL+ALT+L  格式化代码  
CTRL+ALT+I  自动缩进  
CTRL+ALT+O  优化导入的类和包  
ALT+INSERT  生成代码(如 GET,SET 方法,构造函数等)  
CTRL+E      最近更改的代码  
CTRL+ALT+SPACE  类名或接口名提示  
CTRL+P   方法参数提示  
CTRL+Q，可以看到当前方法的声明 
  
Shift+F6  重构-重命名 (包、类、方法、变量、甚至注释等) 
Ctrl+Alt+V 提取变量 

** -----------查询快捷键-------- 
Ctrl＋Shift＋Backspace 可以跳转到上次编辑的地 
CTRL+ALT+ left/right 前后导航编辑过的地方 
ALT+7  靠左窗口显示当前文件的结构 
Ctrl+F12 浮动显示当前文件的结构 
ALT+F7 找到你的函数或者变量或者类的所有引用到的地方 
CTRL+ALT+F7  找到你的函数或者变量或者类的所有引用到的地方 

Ctrl+Shift+Alt+N 查找类中的方法或变量 
双击 SHIFT 在项目的所有目录查找文件 
Ctrl+N   查找类 
Ctrl+Shift+N 查找文件 
CTRL+G   定位行  
CTRL+F   在当前窗口查找文本  
CTRL+SHIFT+F  在指定窗口查找文本  
CTRL+R   在 当前窗口替换文本  
CTRL+SHIFT+R  在指定窗口替换文本  
ALT+SHIFT+C  查找修改的文件  
CTRL+E   最近打开的文件  
F3   向下查找关键字出现位置  
SHIFT+F3  向上一个关键字出现位置  
选中文本，按 Alt+F3，高亮相同文本，F3 逐个往下查找相同文本 
F4   查找变量来源  


CTRL+SHIFT+O  弹出显示查找内容 


Ctrl+W 选中代码，连续按会有其他效果 
F2 或 Shift+F2 高亮错误或警告快速定位 
Ctrl+Up/Down 光标跳转到第一行或最后一行下 

Ctrl+B 快速打开光标处的类或方法  
CTRL+ALT+B  找所有的子类  
CTRL+SHIFT+B  找变量的类  


Ctrl+Shift+上下键  上下移动代码 
Ctrl+Alt+ left/right 返回至上次浏览的位置 
Ctrl+X 删除行 
Ctrl+D 复制行 
Ctrl+/ 或 Ctrl+Shift+/  注释（// 或者/*...*/ ） 


Ctrl+H 显示类结构图 
Ctrl+Q 显示注释文档 


Alt+F1 查找代码所在位置 
Alt+1 快速打开或隐藏工程面板 

Alt+ left/right 切换代码视图 
ALT+ ↑/↓  在方法间快速移动定位  
CTRL+ALT+ left/right 前后导航编辑过的地方 
Ctrl＋Shift＋Backspace 可以跳转到上次编辑的地 
Alt+6    查找 TODO 

** -----------其他快捷键------------------- 
SHIFT+ENTER 另起一行 
CTRL+Z   倒退(撤销) 
CTRL+SHIFT+Z  向前(取消撤销) 
CTRL+ALT+F12  资源管理器打开文件夹  
ALT+F1   查找文件所在目录位置  
SHIFT+ALT+INSERT 竖编辑模式  
CTRL+F4  关闭当前窗口 
Ctrl+Alt+V，可以引入变量。例如：new String(); 自动导入变量定义 
Ctrl+~，快速切换方案（界面外观、代码风格、快捷键映射等菜单） 

** -----------svn 快捷键--------------- 

ctrl+k 提交代码到 SVN 
ctrl+t 更新代码 

** -----------调试快捷键---------------

其实常用的 就是 F8 F7 F9 最值得一提的 就是 Drop Frame  可以让运行过的代码从头再来

alt+F8          debug 时选中查看值 
Alt+Shift+F9，选择 Debug 
Alt+Shift+F10，选择 Run 
Ctrl+Shift+F9，编译 
Ctrl+Shift+F8，查看断点 

F7，步入 
Shift+F7，智能步入 
Alt+Shift+F7，强制步入 
F8，步过 
Shift+F8，步出 
Alt+Shift+F8，强制步过 

Alt+F9，运行至光标处 
Ctrl+Alt+F9，强制运行至光标处 
F9，恢复程序 
Alt+F10，定位到断点 

** -----------重构--------------- 
Ctrl+Alt+Shift+T，弹出重构菜单 
Shift+F6，重命名 
F6，移动 
F5，复制 
Alt+Delete，安全删除 
Ctrl+Alt+N，内联 
============================================================ 


** 十大 Intellij IDEA 快捷键 




Intellij IDEA 中有很多快捷键让人爱不释手，stackoverflow 上也有一些有趣的讨论。每个人都有自己的最爱，想排出个理想的榜单还真是困难。 
以前也整理过 Intellij 的快捷键，这次就按照我日常开发时的使用频率，简单分类列一下我最喜欢的十大快捷-神-键吧。 


1 智能提示: 

Intellij 首当其冲的当然就是 Intelligence 智能！基本的代码提示用 Ctrl+Space，还有更智能地按类型信息提示 Ctrl+Shift+Space，但因为 Intellij 总是随着我们敲击而自动提示，所以很多时候都不会手动敲这两个快捷键(除非提示框消失了)。用 F2/ Shift+F2 移动到有错误的代码，Alt+Enter 快速修复(即 Eclipse 中的 Quick Fix 功能)。当智能提示为我们自动补全方法名时，我们通常要自己补上行尾的反括号和分号，当括号嵌套很多层时会很麻烦，这时我们只需敲 Ctrl+Shift+Enter 就能自动补全末尾的字符。而且不只是括号，例如敲完 if/for 时也可以自动补上{}花括号。 
最后要说一点，Intellij 能够智能感知 Spring、Hibernate 等主流框架的配置文件和类，以静制动，在看似“静态”的外表下，智能地扫描理解你的项目是如何构造和配置的。 


2 重构: 
Intellij 重构是另一完爆 Eclipse 的功能，其智能程度令人瞠目结舌，比如提取变量时自动检查到所有匹配同时提取成一个变量等。尤其看过《重构-改善既有代码设计》之后，有了 Intellij 的配合简直是令人大呼过瘾！也正是强大的智能和重构功能，使 Intellij 下的 TDD 开发非常顺畅。 


切入正题，先说一个无敌的重构功能大汇总快捷键 Ctrl+Shift+Alt+T，叫做 Refactor This。按法有点复杂，但也符合 Intellij 的风格，很多快捷键都要双手完成，而不像 Eclipse 不少最有用的快捷键可以潇洒地单手完成(不知道算不算 Eclipse 的一大优点)，但各位用过 Emacs 的话就会觉得也没什么了(非 Emacs 黑)。此外，还有些最常用的重构技巧，因为太常用了，若每次都在 Refactor This 菜单里选的话效率有些低。比如 Shift+F6 直接就是改名，Ctrl+Alt+V 则是提取变量。 

3 代码生成： 
这一点类似 Eclipse，虽不是独到之处，但因为日常使用频率极高，所以还是罗列在榜单前面。常用的有 fori/sout/psvm+Tab 即可生成循环、System.out、main 方法等 boilerplate 样板代码，用 Ctrl+J 可以查看所有模板。后面“辅助”一节中将会讲到 Alt+Insert，在编辑窗口中点击可以生成构造函数、toString、getter/setter、重写父类方法等。这两个技巧实在太常用了，几乎每天都要生成一堆 main、System.out 和 getter/setter。 

另外，Intellij IDEA 13 中加入了后缀自动补全功能(Postfix Completion)，比模板生成更加灵活和强大。例如要输入 for(User user : users)只需输入 user.for+Tab。再比如，要输入 Date birthday = user.getBirthday();只需输入 user.getBirthday().var+Tab 即可。 

4 编辑： 
编辑中不得不说的一大神键就是能够自动按语法选中代码的 Ctrl+W 以及反向的 Ctrl+Shift+W 了。此外，Ctrl+Left/Right 移动光标到前/后单词，Ctrl+[/]移动到前/后代码块，这些类 Vim 风格的光标移动也是一大亮点。以上 Ctrl+Left/Right/[]加上 Shift 的话就能选中跳跃范围内的代码。Alt+Forward/Backward 移动到前/后方法。还有些非常普通的像 Ctrl+Y 删除行、Ctrl+D 复制行、Ctrl+</>折叠代码就不多说了。 

关于光标移动再多扩展一点，除了 Intellij 本身已提供的功能外，我们还可以安装 ideaVim 或者 emacsIDEAs 享受到 Vim 的快速移动和 Emacs 的 AceJump 功能(超爽！)。另外，Intellij 的书签功能也是不错的，用 Ctrl+Shift+Num 定义 1-10 书签(再次按这组快捷键则是删除书签)，然后通过 Ctrl+Num 跳转。这避免了多次使用前/下一编辑位置 Ctrl+Left/Right 来回跳转的麻烦，而且此快捷键默认与 Windows 热键冲突(默认多了 Alt，与 Windows 改变显示器显示方向冲突，一不小心显示器就变成倒着显式的了，冏啊)。 


5 查找打开： 


类似 Eclipse，Intellij 的 Ctrl+N/Ctrl+Shift+N 可以打开类或资源，但 Intellij 更加智能一些，我们输入的任何字符都将看作模糊匹配，省却了 Eclipse 中还有输入*的麻烦。最新版本的 IDEA 还加入了 Search Everywhere 功能，只需按 Shift+Shift 即可在一个弹出框中搜索任何东西，包括类、资源、配置项、方法等等。 


类的继承关系则可用 Ctrl+H 打开类层次窗口，在继承层次上跳转则用 Ctrl+B/Ctrl+Alt+B 分别对应父类或父方法定义和子类或子方法实现，查看当前类的所有方法用 Ctrl+F12。 


要找类或方法的使用也很简单，Alt+F7。要查找文本的出现位置就用 Ctrl+F/Ctrl+Shift+F 在当前窗口或全工程中查找，再配合 F3/Shift+F3 前后移动到下一匹配处。 


Intellij 更加智能的又一佐证是在任意菜单或显示窗口，都可以直接输入你要找的单词，Intellij 就会自动为你过滤。 


6 其他辅助： 


以上这些神键配上一些辅助快捷键，即可让你的双手 90%以上的时间摆脱鼠标，专注于键盘仿佛在进行钢琴表演。这些不起眼却是至关重要的最后一块拼图有： 


Ø  命令：Ctrl+Shift+A 可以查找所有 Intellij 的命令，并且每个命令后面还有其快捷键。所以它不仅是一大神键，也是查找学习快捷键的工具。 


Ø  新建：Alt+Insert 可以新建类、方法等任何东西。 


Ø  格式化代码：格式化 import 列表 Ctrl+Alt+O，格式化代码 Ctrl+Alt+L。 


Ø  切换窗口：Alt+Num，常用的有 1-项目结构，3-搜索结果，4/5-运行调试。Ctrl+Tab 切换标签页，Ctrl+E/Ctrl+Shift+E 打开最近打开过的或编辑过的文件。 


Ø  单元测试：Ctrl+Alt+T 创建单元测试用例。 


Ø  运行：Alt+Shift+F10 运行程序，Shift+F9 启动调试，Ctrl+F2 停止。 


Ø  调试：F7/F8/F9 分别对应 Step into，Step over，Continue。 


此外还有些我自定义的，例如水平分屏 Ctrl+|等，和一些神奇的小功能 Ctrl+Shift+V 粘贴很早以前拷贝过的，Alt+Shift+Insert 进入到列模式进行按列选中。 


Ø  Top #10 切来切去：Ctrl+Tab 


Ø  Top #9 选你所想：Ctrl+W 


Ø  Top #8 代码生成：Template/Postfix +Tab 


Ø  Top #7 发号施令：Ctrl+Shift+A 


Ø  Top #6 无处藏身：Shift+Shift 


Ø  Top #5 自动完成：Ctrl+Shift+Enter 


Ø  Top #4 创造万物：Alt+Insert 


太难割舍，前三名并列吧！ 


Ø  Top #1 智能补全：Ctrl+Shift+Space 


Ø  Top #1 自我修复：Alt+Enter 


Ø  Top #1 重构一切：Ctrl+Shift+Alt+T 


CTRL+ALT+ left/right 前后导航编辑过的地方 
Ctrl＋Shift＋Backspace 可以跳转到上次编辑的地 
